@model BugSleuth.Models.TicketAttachment

@{
    ViewBag.Title = "Edit";
}
<div class="wrap-primary">
    <div class="container boxed">

        <h2>View Attachment</h2>
        @Html.ActionLink("Edit Attachment", "Edit", new { id = Model.Id }) | @Html.ActionLink("Back to Ticket", "Edit", "Tickets", new { id = Model.TicketId }, null)

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TicketId)
                @Html.HiddenFor(model => model.UserName)
                @Html.HiddenFor(model => model.Created)
                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.Title, "Ticket Title", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ticket.Title, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Ticket.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Current attachment", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.FileUrl)
                        @Html.EditorFor(model => model.FileUrl, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BTUser.DisplayName, "Logged by", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BTUser.DisplayName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.BTUser.DisplayName, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        }

        <div>
            @Html.ActionLink("Back to Ticket", "Edit", "Tickets", new { id = Model.TicketId }, null)
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
