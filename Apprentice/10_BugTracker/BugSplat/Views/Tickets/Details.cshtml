@model BugSleuth.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<div class="wrap-primary">
    <div class="container boxed">

        <h2>Ticket Details</h2>
        @Html.ActionLink("Edit Ticket", "Edit", new { id = Model.Id, projectid = ViewBag.pid }) |
        @Html.ActionLink("Back to List", "Index", new { projectid = ViewBag.pid })

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                <div class="col-md-4">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Title)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.Updated)
                    @Html.HiddenFor(model => model.OwnerUserName)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, "Status", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerUserName, "Owner", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.DropDownList("OwnerUserName", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.OwnerUserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedToUserName, "Assigned", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-4">
                            @Html.DropDownList("AssignedToUserName", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.AssignedToUserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-7 col-md-offset-1">
                    <div class="form-group">
                        <h4 style="margin-top:0px">Ticket Comments</h4>
                        <table>
                            <tr>
                                <th class="col-md-4">
                                    Date Created
                                </th>
                                <th class="col-md-4">
                                    Created By
                                </th>
                                <th class="col-md-4">
                                    Teaser
                                </th>
                                <th class="col-md-4">
                                </th>
                            </tr>

                            @foreach (var item in Model.TicketComments)
                            {
                                <tr>
                                    <td class="col-md-4">
                                        @item.Created.DateTime.ToLocalTime()
                                    </td>
                                    <td class="col-md-4">
                                        @item.BTUser.DisplayName
                                    </td>
                                    <td class="col-md-4">
                                        @if (item.Comment.Length < 25)
                                        {
                                            @item.Comment
                                        }
                                        else
                                        {
                                            @item.Comment.Substring(0, 23);
                                        }
                                    </td>
                                    <td class="col-md-4">
                                        @Html.ActionLink("Details", "Details", "TicketComments", new { id = item.Id, projectid = ViewBag.pid }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                        <hr />
                    </div>

                    <div class="form-group">
                        <h4 style="margin-top:0px">Ticket Attachments</h4>
                        <table>
                            <tr>
                                <th class="col-md-4">
                                    Date Created
                                </th>
                                <th class="col-md-4">
                                    Created By
                                </th>
                                <th class="col-md-4">
                                    Filename
                                </th>
                                <th class="col-md-4"></th>
                            </tr>

                            @foreach (var item in Model.TicketAttachments)
                            {
                                <tr>
                                    <td class="col-md-4">
                                        @item.Created.DateTime.ToLocalTime()
                                    </td>
                                    <td class="col-md-4">
                                        @item.BTUser.DisplayName
                                    </td>
                                    <td class="col-md-4">
                                        <a href="@Url.Content(item.FileUrl)" target="_blank">@item.FileUrl.Substring(6)</a>
                                    </td>
                                    <td class="col-md-4">
                                        @Html.ActionLink("Details", "Details", "TicketAttachments", new { id = item.Id, projectid = ViewBag.pid }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                        <hr />
                    </div>

                    <div class="form-group">
                        <h4 style="margin-top:0px">Ticket History</h4>
                        <table>
                            <tr>
                                <th class="col-md-4">
                                    Date Created
                                </th>
                                <th class="col-md-4">
                                    Created By
                                </th>
                                <th class="col-md-4">
                                    Property
                                </th>
                                <th class="col-md-4">
                                </th>
                            </tr>

                            @foreach (var item in Model.TicketHistories)
                            {
                                <tr>
                                    <td class="col-md-4">
                                        @item.Changed.DateTime.ToLocalTime()
                                    </td>
                                    <td class="col-md-4">
                                        @item.BTUser.DisplayName
                                    </td>
                                    <td class="col-md-4">
                                        @item.Property
                                    </td>
                                    <td class="col-md-4">
                                        @Html.ActionLink("Details", "Details", "TicketHistories", new { id = item.Id, projectid = ViewBag.pid }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                        <hr />
                    </div>
                </div>
            </div>

        }

        <div class="col-md-10" style="margin-bottom:25px">
            @Html.ActionLink("Back to List", "Index", new { projectid = ViewBag.pid })
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
